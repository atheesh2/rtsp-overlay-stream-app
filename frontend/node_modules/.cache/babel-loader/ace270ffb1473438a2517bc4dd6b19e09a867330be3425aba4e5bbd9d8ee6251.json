{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\athee\\\\OneDrive\\\\Desktop\\\\RSTP\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Hls from 'hls.js';\nimport './App.css';\n\n// ✅ Fix 8: Use environment variable for API base URL\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api';\n\n// ✅ Fix 9: Debounce hook for RTSP input\nfunction useDebouncedValue(value, delay = 500) {\n  _s();\n  const [debounced, setDebounced] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => setDebounced(value), delay);\n    return () => clearTimeout(handler);\n  }, [value, delay]);\n  return debounced;\n}\n_s(useDebouncedValue, \"33bQBlXg6j7MFSTRBeGy5/ui5G8=\");\nconst VideoPlayer = ({\n  hlsUrl,\n  overlays,\n  videoRef\n}) => {\n  _s2();\n  useEffect(() => {\n    if (!hlsUrl || !videoRef.current) return;\n    const video = videoRef.current;\n    let hls;\n    if (Hls.isSupported()) {\n      hls = new Hls();\n      hls.loadSource(hlsUrl);\n      hls.attachMedia(video);\n      hls.on(Hls.Events.MANIFEST_PARSED, function () {\n        if (video && typeof video.play === 'function') {\n          video.play().catch(e => console.log(\"Autoplay blocked:\", e));\n        }\n      });\n    } else if (video.canPlayType('application/vnd.apple.mpegurl')) {\n      video.src = hlsUrl;\n      video.addEventListener('loadedmetadata', () => {\n        if (video && typeof video.play === 'function') {\n          video.play().catch(e => console.log(\"Autoplay blocked:\", e));\n        }\n      });\n    }\n    return () => {\n      if (hls) hls.destroy();else video.src = '';\n    };\n  }, [hlsUrl, videoRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      controls: true,\n      autoPlay: true,\n      muted: true,\n      playsInline: true,\n      crossOrigin: \"anonymous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), hlsUrl && overlays.map((overlay, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `overlay-item ${overlay.type}`,\n      style: {\n        position: 'absolute',\n        top: `${overlay.position.y}px`,\n        left: `${overlay.position.x}px`,\n        width: `${overlay.size.width}px`,\n        height: `${overlay.size.height}px`,\n        pointerEvents: 'none',\n        color: 'white',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        textAlign: 'center',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: overlay.type === 'logo' ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: overlay.content.startsWith('http') || overlay.content.startsWith('data:') ? overlay.content : `data:image/png;base64,${overlay.content}`,\n        alt: overlay.name,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        onError: e => e.target.style.display = 'none'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }, this) : overlay.content // render text overlay\n    }, overlay._id || index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s2(VideoPlayer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = VideoPlayer;\nconst OverlayManager = ({\n  overlays,\n  setOverlays,\n  selectedOverlay,\n  setSelectedOverlay,\n  fetchOverlays\n}) => {\n  _s3();\n  const [formData, setFormData] = useState({\n    name: '',\n    content: '',\n    type: 'text',\n    position: {\n      x: '',\n      y: ''\n    },\n    size: {\n      width: '',\n      height: ''\n    }\n  });\n  useEffect(() => {\n    if (selectedOverlay) {\n      var _selectedOverlay$posi, _selectedOverlay$posi2, _selectedOverlay$posi3, _selectedOverlay$posi4, _selectedOverlay$size, _selectedOverlay$size2, _selectedOverlay$size3, _selectedOverlay$size4;\n      setFormData({\n        name: selectedOverlay.name || '',\n        content: selectedOverlay.content || '',\n        type: selectedOverlay.type || 'text',\n        position: {\n          x: (_selectedOverlay$posi = (_selectedOverlay$posi2 = selectedOverlay.position) === null || _selectedOverlay$posi2 === void 0 ? void 0 : _selectedOverlay$posi2.x) !== null && _selectedOverlay$posi !== void 0 ? _selectedOverlay$posi : '',\n          y: (_selectedOverlay$posi3 = (_selectedOverlay$posi4 = selectedOverlay.position) === null || _selectedOverlay$posi4 === void 0 ? void 0 : _selectedOverlay$posi4.y) !== null && _selectedOverlay$posi3 !== void 0 ? _selectedOverlay$posi3 : ''\n        },\n        size: {\n          width: (_selectedOverlay$size = (_selectedOverlay$size2 = selectedOverlay.size) === null || _selectedOverlay$size2 === void 0 ? void 0 : _selectedOverlay$size2.width) !== null && _selectedOverlay$size !== void 0 ? _selectedOverlay$size : '',\n          height: (_selectedOverlay$size3 = (_selectedOverlay$size4 = selectedOverlay.size) === null || _selectedOverlay$size4 === void 0 ? void 0 : _selectedOverlay$size4.height) !== null && _selectedOverlay$size3 !== void 0 ? _selectedOverlay$size3 : ''\n        }\n      });\n    } else {\n      setFormData({\n        name: '',\n        content: '',\n        type: 'text',\n        position: {\n          x: '',\n          y: ''\n        },\n        size: {\n          width: '',\n          height: ''\n        }\n      });\n    }\n  }, [selectedOverlay]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (['x', 'y'].includes(name)) {\n      setFormData(prev => ({\n        ...prev,\n        position: {\n          ...prev.position,\n          [name]: value\n        }\n      }));\n    } else if (['width', 'height'].includes(name)) {\n      setFormData(prev => ({\n        ...prev,\n        size: {\n          ...prev.size,\n          [name]: value\n        }\n      }));\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const payload = {\n        ...formData,\n        position: {\n          x: parseInt(formData.position.x),\n          y: parseInt(formData.position.y)\n        },\n        size: {\n          width: parseInt(formData.size.width),\n          height: parseInt(formData.size.height)\n        }\n      };\n      if (selectedOverlay && selectedOverlay._id) {\n        delete payload._id;\n        await axios.put(`${API_BASE_URL}/overlays/${selectedOverlay._id}`, payload);\n        alert('Overlay updated successfully!');\n      } else {\n        await axios.post(`${API_BASE_URL}/overlays`, payload);\n        alert('Overlay created successfully!');\n      }\n      fetchOverlays();\n      setSelectedOverlay(null);\n    } catch (error) {\n      var _error$response;\n      console.error('Error saving overlay:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error);\n      alert('Failed to save overlay. Check console.');\n    }\n  };\n  const handleDelete = async () => {\n    if (!selectedOverlay || !window.confirm(`Are you sure you want to delete ${selectedOverlay.name}?`)) return;\n    try {\n      await axios.delete(`${API_BASE_URL}/overlays/${selectedOverlay._id}`);\n      alert('Overlay deleted successfully!');\n      fetchOverlays();\n      setSelectedOverlay(null);\n    } catch (error) {\n      console.error('Error deleting overlay:', error);\n      alert('Failed to delete overlay. Check console.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay-manager-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: selectedOverlay ? `Edit ${selectedOverlay.name}` : 'Create New Overlay'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange,\n        placeholder: \"Overlay Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"content\",\n        value: formData.content,\n        onChange: handleChange,\n        placeholder: formData.type === 'logo' ? \"Logo URL or Base64\" : \"Text Content\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"type\",\n        value: formData.type,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"text\",\n          children: \"Text Overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"logo\",\n          children: \"Logo/Image Overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"x\",\n        type: \"number\",\n        value: formData.position.x,\n        onChange: handleChange,\n        placeholder: \"X Position\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"y\",\n        type: \"number\",\n        value: formData.position.y,\n        onChange: handleChange,\n        placeholder: \"Y Position\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"width\",\n        type: \"number\",\n        value: formData.size.width,\n        onChange: handleChange,\n        placeholder: \"Width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"height\",\n        type: \"number\",\n        value: formData.size.height,\n        onChange: handleChange,\n        placeholder: \"Height\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: selectedOverlay ? 'Update Overlay' : 'Create Overlay'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this), selectedOverlay && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleDelete,\n          className: \"delete-btn\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setSelectedOverlay(null),\n          children: \"Clear/New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Saved Overlays\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay-list\",\n      children: overlays.map(o => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedOverlay(o),\n        className: (selectedOverlay === null || selectedOverlay === void 0 ? void 0 : selectedOverlay._id) === o._id ? 'selected' : '',\n        children: [o.name, \" (\", o.type, \")\"]\n      }, o._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 9\n  }, this);\n};\n_s3(OverlayManager, \"/dfAKX30lwQHti/0CScRc50s+3U=\");\n_c2 = OverlayManager;\nfunction App() {\n  _s4();\n  const videoRef = useRef(null);\n  const [inputRtspUrl, setInputRtspUrl] = useState('');\n  const debouncedRtspUrl = useDebouncedValue(inputRtspUrl); // ✅ Fix 9\n  const [hlsUrl, setHlsUrl] = useState(null);\n  const [streamId, setStreamId] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [overlays, setOverlays] = useState([]);\n  const [selectedOverlay, setSelectedOverlay] = useState(null);\n  const fetchOverlays = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/overlays`);\n      setOverlays(response.data);\n    } catch (error) {\n      console.error('Error fetching overlays:', error);\n    }\n  };\n  useEffect(() => {\n    fetchOverlays();\n  }, []);\n  const handleStartStream = async () => {\n    if (streamId) handleStopStream();\n    setLoading(true);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/stream/start`, {\n        rtspUrl: debouncedRtspUrl\n      });\n      setHlsUrl(response.data.hlsUrl);\n      setStreamId(response.data.streamId);\n    } catch (error) {\n      var _error$response2;\n      console.error('Error starting stream:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error);\n      alert('Failed to start stream. Check console and Flask server logs.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleStopStream = async () => {\n    if (!streamId) return;\n    try {\n      await axios.post(`${API_BASE_URL}/stream/stop/${streamId}`);\n    } catch (error) {\n      console.warn('Could not confirm stream stop on server:', error);\n    } finally {\n      setHlsUrl(null);\n      setStreamId(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"RTSP Livestream with Custom Overlays\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Tech Stack: Python (Flask), MongoDB, React, FFmpeg (RTSP-to-HLS)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stream-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Live View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stream-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter RTSP URL\",\n            value: inputRtspUrl,\n            onChange: e => setInputRtspUrl(e.target.value),\n            disabled: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: hlsUrl ? handleStopStream : handleStartStream,\n            disabled: loading || !debouncedRtspUrl,\n            children: loading ? 'Processing...' : hlsUrl ? 'Stop Stream' : 'Start Stream'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(VideoPlayer, {\n          hlsUrl: hlsUrl,\n          overlays: overlays,\n          videoRef: videoRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this), !hlsUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"placeholder-text\",\n          children: \"Enter an RTSP URL and click Start to begin the livestream.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Overlay Options (CRUD)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(OverlayManager, {\n          overlays: overlays,\n          setOverlays: setOverlays,\n          selectedOverlay: selectedOverlay,\n          setSelectedOverlay: setSelectedOverlay,\n          fetchOverlays: fetchOverlays\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 9\n  }, this);\n}\n_s4(App, \"B+vQncVVzxAcOAGVxF4ZFE5A2sY=\", false, function () {\n  return [useDebouncedValue];\n});\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"VideoPlayer\");\n$RefreshReg$(_c2, \"OverlayManager\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Hls","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","useDebouncedValue","value","delay","_s","debounced","setDebounced","handler","setTimeout","clearTimeout","VideoPlayer","hlsUrl","overlays","videoRef","_s2","current","video","hls","isSupported","loadSource","attachMedia","on","Events","MANIFEST_PARSED","play","catch","e","console","log","canPlayType","src","addEventListener","destroy","className","children","ref","controls","autoPlay","muted","playsInline","crossOrigin","fileName","_jsxFileName","lineNumber","columnNumber","map","overlay","index","type","style","position","top","y","left","x","width","size","height","pointerEvents","color","fontSize","fontWeight","textAlign","display","alignItems","justifyContent","content","startsWith","alt","name","onError","target","_id","_c","OverlayManager","setOverlays","selectedOverlay","setSelectedOverlay","fetchOverlays","_s3","formData","setFormData","_selectedOverlay$posi","_selectedOverlay$posi2","_selectedOverlay$posi3","_selectedOverlay$posi4","_selectedOverlay$size","_selectedOverlay$size2","_selectedOverlay$size3","_selectedOverlay$size4","handleChange","includes","prev","handleSubmit","preventDefault","payload","parseInt","put","alert","post","error","_error$response","response","data","handleDelete","window","confirm","delete","onSubmit","onChange","placeholder","required","onClick","o","_c2","App","_s4","inputRtspUrl","setInputRtspUrl","debouncedRtspUrl","setHlsUrl","streamId","setStreamId","loading","setLoading","get","handleStartStream","handleStopStream","rtspUrl","_error$response2","warn","disabled","_c3","$RefreshReg$"],"sources":["C:/Users/athee/OneDrive/Desktop/RSTP/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Hls from 'hls.js';\nimport './App.css';\n\n// ✅ Fix 8: Use environment variable for API base URL\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api';\n\n// ✅ Fix 9: Debounce hook for RTSP input\nfunction useDebouncedValue(value, delay = 500) {\n    const [debounced, setDebounced] = useState(value);\n    useEffect(() => {\n        const handler = setTimeout(() => setDebounced(value), delay);\n        return () => clearTimeout(handler);\n    }, [value, delay]);\n    return debounced;\n}\n\nconst VideoPlayer = ({ hlsUrl, overlays, videoRef }) => {\n    useEffect(() => {\n        if (!hlsUrl || !videoRef.current) return;\n        const video = videoRef.current;\n        let hls;\n\n        if (Hls.isSupported()) {\n            hls = new Hls();\n            hls.loadSource(hlsUrl);\n            hls.attachMedia(video);\n            hls.on(Hls.Events.MANIFEST_PARSED, function () {\n                if (video && typeof video.play === 'function') {\n                    video.play().catch(e => console.log(\"Autoplay blocked:\", e));\n                }\n            });\n        } else if (video.canPlayType('application/vnd.apple.mpegurl')) {\n            video.src = hlsUrl;\n            video.addEventListener('loadedmetadata', () => {\n                if (video && typeof video.play === 'function') {\n                    video.play().catch(e => console.log(\"Autoplay blocked:\", e));\n                }\n            });\n        }\n\n        return () => {\n            if (hls) hls.destroy();\n            else video.src = '';\n        };\n    }, [hlsUrl, videoRef]);\n\n    return (\n        <div className=\"video-container\">\n            <video ref={videoRef} controls autoPlay muted playsInline crossOrigin=\"anonymous\" />\n            \n            {/* Replace your old overlay map with this */}\n            {hlsUrl && overlays.map((overlay, index) => (\n              <div\n                key={overlay._id || index}\n                className={`overlay-item ${overlay.type}`}\n                style={{\n                    position: 'absolute',\n                    top: `${overlay.position.y}px`,\n                    left: `${overlay.position.x}px`,\n                    width: `${overlay.size.width}px`,\n                    height: `${overlay.size.height}px`,\n                    pointerEvents: 'none',\n                    color: 'white',\n                    fontSize: '16px',\n                    fontWeight: 'bold',\n                    textAlign: 'center',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                }}\n              >\n                {overlay.type === 'logo' ? (\n                  <img\n                    src={\n                      overlay.content.startsWith('http') || overlay.content.startsWith('data:')\n                        ? overlay.content\n                        : `data:image/png;base64,${overlay.content}`\n                    }\n                    alt={overlay.name}\n                    style={{ width: '100%', height: '100%' }}\n                    onError={(e) => (e.target.style.display = 'none')}\n                  />\n                ) : (\n                  overlay.content // render text overlay\n                )}\n                \n              </div>\n            ))}\n        </div>\n    );\n};\n\nconst OverlayManager = ({ overlays, setOverlays, selectedOverlay, setSelectedOverlay, fetchOverlays }) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        content: '',\n        type: 'text',\n        position: { x: '', y: '' },\n        size: { width: '', height: '' }\n    });\n\n    useEffect(() => {\n        if (selectedOverlay) {\n            setFormData({\n                name: selectedOverlay.name || '',\n                content: selectedOverlay.content || '',\n                type: selectedOverlay.type || 'text',\n                position: {\n                    x: selectedOverlay.position?.x ?? '',\n                    y: selectedOverlay.position?.y ?? ''\n                },\n                size: {\n                    width: selectedOverlay.size?.width ?? '',\n                    height: selectedOverlay.size?.height ?? ''\n                }\n            });\n        } else {\n            setFormData({\n                name: '',\n                content: '',\n                type: 'text',\n                position: { x: '', y: '' },\n                size: { width: '', height: '' }\n            });\n        }\n    }, [selectedOverlay]);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        if (['x', 'y'].includes(name)) {\n            setFormData(prev => ({ ...prev, position: { ...prev.position, [name]: value } }));\n        } else if (['width', 'height'].includes(name)) {\n            setFormData(prev => ({ ...prev, size: { ...prev.size, [name]: value } }));\n        } else {\n            setFormData(prev => ({ ...prev, [name]: value }));\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const payload = {\n                ...formData,\n                position: { x: parseInt(formData.position.x), y: parseInt(formData.position.y) },\n                size: { width: parseInt(formData.size.width), height: parseInt(formData.size.height) }\n            };\n\n            if (selectedOverlay && selectedOverlay._id) {\n                delete payload._id;\n                await axios.put(`${API_BASE_URL}/overlays/${selectedOverlay._id}`, payload);\n                alert('Overlay updated successfully!');\n            } else {\n                await axios.post(`${API_BASE_URL}/overlays`, payload);\n                alert('Overlay created successfully!');\n            }\n            fetchOverlays();\n            setSelectedOverlay(null);\n        } catch (error) {\n            console.error('Error saving overlay:', error.response?.data || error);\n            alert('Failed to save overlay. Check console.');\n        }\n    };\n\n    const handleDelete = async () => {\n        if (!selectedOverlay || !window.confirm(`Are you sure you want to delete ${selectedOverlay.name}?`)) return;\n        try {\n            await axios.delete(`${API_BASE_URL}/overlays/${selectedOverlay._id}`);\n            alert('Overlay deleted successfully!');\n            fetchOverlays();\n            setSelectedOverlay(null);\n        } catch (error) {\n            console.error('Error deleting overlay:', error);\n            alert('Failed to delete overlay. Check console.');\n        }\n    };\n\n    return (\n        <div className=\"overlay-manager-panel\">\n            <h3>{selectedOverlay ? `Edit ${selectedOverlay.name}` : 'Create New Overlay'}</h3>\n            <form onSubmit={handleSubmit}>\n                <input\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleChange}\n                    placeholder=\"Overlay Name\"\n                    required\n                />\n                <input\n                    name=\"content\"\n                    value={formData.content}\n                    onChange={handleChange}\n                    placeholder={formData.type === 'logo' ? \"Logo URL or Base64\" : \"Text Content\"}\n                    required\n                />\n                <select name=\"type\" value={formData.type} onChange={handleChange}>\n                    <option value=\"text\">Text Overlay</option>\n                    <option value=\"logo\">Logo/Image Overlay</option>\n                </select>\n\n                <input\n                    name=\"x\"\n                    type=\"number\"\n                    value={formData.position.x}\n                    onChange={handleChange}\n                    placeholder=\"X Position\"\n                />\n                <input\n                    name=\"y\"\n                    type=\"number\"\n                    value={formData.position.y}\n                    onChange={handleChange}\n                    placeholder=\"Y Position\"\n                />\n                <input\n                    name=\"width\"\n                    type=\"number\"\n                    value={formData.size.width}\n                    onChange={handleChange}\n                    placeholder=\"Width\"\n                />\n                <input\n                    name=\"height\"\n                    type=\"number\"\n                    value={formData.size.height}\n                    onChange={handleChange}\n                    placeholder=\"Height\"\n                />\n\n                <button type=\"submit\">{selectedOverlay ? 'Update Overlay' : 'Create Overlay'}</button>\n                {selectedOverlay && (\n                    <>\n                        <button type=\"button\" onClick={handleDelete} className=\"delete-btn\">Delete</button>\n                        <button type=\"button\" onClick={() => setSelectedOverlay(null)}>Clear/New</button>\n                    </>\n                )}\n            </form>\n\n            <h4>Saved Overlays</h4>\n            <div className=\"overlay-list\">\n                {overlays.map(o => (\n                    <button\n                        key={o._id}\n                        onClick={() => setSelectedOverlay(o)}\n                        className={selectedOverlay?._id === o._id ? 'selected' : ''}\n                    >\n                        {o.name} ({o.type})\n                    </button>\n                ))}\n            </div>\n        </div>\n    );\n};\n\n\nfunction App() {\n    const videoRef = useRef(null);\n    const [inputRtspUrl, setInputRtspUrl] = useState('');\n    const debouncedRtspUrl = useDebouncedValue(inputRtspUrl); // ✅ Fix 9\n    const [hlsUrl, setHlsUrl] = useState(null);\n    const [streamId, setStreamId] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [overlays, setOverlays] = useState([]);\n    const [selectedOverlay, setSelectedOverlay] = useState(null);\n\n    const fetchOverlays = async () => {\n        try {\n            const response = await axios.get(`${API_BASE_URL}/overlays`);\n            setOverlays(response.data);\n        } catch (error) {\n            console.error('Error fetching overlays:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchOverlays();\n    }, []);\n\n    const handleStartStream = async () => {\n        if (streamId) handleStopStream();\n        setLoading(true);\n        try {\n            const response = await axios.post(`${API_BASE_URL}/stream/start`, { rtspUrl: debouncedRtspUrl });\n            setHlsUrl(response.data.hlsUrl);\n            setStreamId(response.data.streamId);\n        } catch (error) {\n            console.error('Error starting stream:', error.response?.data || error);\n            alert('Failed to start stream. Check console and Flask server logs.');\n        } finally {\n            setLoading(false);\n                    }\n    };\n\n    const handleStopStream = async () => {\n        if (!streamId) return;\n        try {\n            await axios.post(`${API_BASE_URL}/stream/stop/${streamId}`);\n        } catch (error) {\n            console.warn('Could not confirm stream stop on server:', error);\n        } finally {\n            setHlsUrl(null);\n            setStreamId(null);\n        }\n    };\n\n    return (\n        <div className=\"app-container\">\n            <header>\n                <h1>RTSP Livestream with Custom Overlays</h1>\n                <p>Tech Stack: Python (Flask), MongoDB, React, FFmpeg (RTSP-to-HLS)</p>\n            </header>\n            <div className=\"content-layout\">\n                <div className=\"stream-section\">\n                    <h2>Live View</h2>\n                    <div className=\"stream-controls\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter RTSP URL\"\n                            value={inputRtspUrl}\n                            onChange={(e) => setInputRtspUrl(e.target.value)}\n                            disabled={loading}\n                        />\n                        <button onClick={hlsUrl ? handleStopStream : handleStartStream} disabled={loading || !debouncedRtspUrl}>\n                            {loading ? 'Processing...' : hlsUrl ? 'Stop Stream' : 'Start Stream'}\n                        </button>\n                    </div>\n                    <VideoPlayer hlsUrl={hlsUrl} overlays={overlays} videoRef={videoRef} />\n                    {!hlsUrl && <p className=\"placeholder-text\">Enter an RTSP URL and click Start to begin the livestream.</p>}\n                </div>\n                <div className=\"overlay-section\">\n                    <h2>Overlay Options (CRUD)</h2>\n                    <OverlayManager \n                        overlays={overlays} \n                        setOverlays={setOverlays}\n                        selectedOverlay={selectedOverlay}\n                        setSelectedOverlay={setSelectedOverlay}\n                        fetchOverlays={fetchOverlays}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}