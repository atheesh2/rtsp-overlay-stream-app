{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\athee\\\\OneDrive\\\\Desktop\\\\RSTP\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Hls from 'hls.js';\nimport './App.css';\n\n// ✅ Fix 8: Use environment variable for API base URL\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api';\n\n// ✅ Fix 9: Debounce hook for RTSP input\nfunction useDebouncedValue(value, delay = 500) {\n  _s();\n  const [debounced, setDebounced] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => setDebounced(value), delay);\n    return () => clearTimeout(handler);\n  }, [value, delay]);\n  return debounced;\n}\n_s(useDebouncedValue, \"33bQBlXg6j7MFSTRBeGy5/ui5G8=\");\nconst VideoPlayer = ({\n  hlsUrl,\n  overlays,\n  videoRef\n}) => {\n  _s2();\n  useEffect(() => {\n    if (!hlsUrl || !videoRef.current) return;\n    const video = videoRef.current;\n    let hls;\n    if (Hls.isSupported()) {\n      hls = new Hls();\n      hls.loadSource(hlsUrl);\n      hls.attachMedia(video);\n      hls.on(Hls.Events.MANIFEST_PARSED, () => {\n        if (video && typeof video.play === 'function') {\n          video.play().catch(e => console.log(\"Autoplay blocked:\", e));\n        }\n      });\n    } else if (video.canPlayType('application/vnd.apple.mpegurl')) {\n      video.src = hlsUrl;\n      video.addEventListener('loadedmetadata', () => {\n        if (video && typeof video.play === 'function') {\n          video.play().catch(e => console.log(\"Autoplay blocked:\", e));\n        }\n      });\n    }\n    return () => {\n      if (hls) hls.destroy();else video.src = '';\n    };\n  }, [hlsUrl, videoRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-container\",\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      controls: true,\n      autoPlay: true,\n      muted: true,\n      playsInline: true,\n      crossOrigin: \"anonymous\",\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), hlsUrl && overlays.map((overlay, index) => {\n      if (overlay.type === 'logo') {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: overlay.content.startsWith('http') || overlay.content.startsWith('data:') ? overlay.content : `data:image/png;base64,${overlay.content}`,\n          alt: overlay.name,\n          style: {\n            position: 'absolute',\n            top: `${overlay.position.y}px`,\n            left: `${overlay.position.x}px`,\n            width: `${overlay.size.width}px`,\n            height: `${overlay.size.height}px`,\n            pointerEvents: 'none'\n          },\n          onError: e => e.target.style.display = 'none'\n        }, overlay._id || index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: `${overlay.position.y}px`,\n            left: `${overlay.position.x}px`,\n            display: 'inline-flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            color: overlay.color || 'white',\n            // ✅ dynamic color\n            fontSize: '16px',\n            fontWeight: 'bold',\n            textAlign: 'center',\n            pointerEvents: 'none',\n            whiteSpace: 'nowrap'\n          },\n          children: overlay.content\n        }, overlay._id || index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this);\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s2(VideoPlayer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = VideoPlayer;\nconst OverlayManager = ({\n  overlays,\n  setOverlays,\n  selectedOverlay,\n  setSelectedOverlay,\n  fetchOverlays\n}) => {\n  _s3();\n  const [formData, setFormData] = useState({\n    name: '',\n    content: '',\n    type: 'text',\n    color: '#ffffff',\n    // default white\n    position: {\n      x: '',\n      y: ''\n    },\n    size: {\n      width: '',\n      height: ''\n    }\n  });\n  useEffect(() => {\n    if (selectedOverlay) {\n      var _selectedOverlay$posi, _selectedOverlay$posi2, _selectedOverlay$posi3, _selectedOverlay$posi4, _selectedOverlay$size, _selectedOverlay$size2, _selectedOverlay$size3, _selectedOverlay$size4;\n      setFormData({\n        name: selectedOverlay.name || '',\n        content: selectedOverlay.content || '',\n        type: selectedOverlay.type || 'text',\n        position: {\n          x: (_selectedOverlay$posi = (_selectedOverlay$posi2 = selectedOverlay.position) === null || _selectedOverlay$posi2 === void 0 ? void 0 : _selectedOverlay$posi2.x) !== null && _selectedOverlay$posi !== void 0 ? _selectedOverlay$posi : '',\n          y: (_selectedOverlay$posi3 = (_selectedOverlay$posi4 = selectedOverlay.position) === null || _selectedOverlay$posi4 === void 0 ? void 0 : _selectedOverlay$posi4.y) !== null && _selectedOverlay$posi3 !== void 0 ? _selectedOverlay$posi3 : ''\n        },\n        size: {\n          width: (_selectedOverlay$size = (_selectedOverlay$size2 = selectedOverlay.size) === null || _selectedOverlay$size2 === void 0 ? void 0 : _selectedOverlay$size2.width) !== null && _selectedOverlay$size !== void 0 ? _selectedOverlay$size : '',\n          height: (_selectedOverlay$size3 = (_selectedOverlay$size4 = selectedOverlay.size) === null || _selectedOverlay$size4 === void 0 ? void 0 : _selectedOverlay$size4.height) !== null && _selectedOverlay$size3 !== void 0 ? _selectedOverlay$size3 : ''\n        }\n      });\n    } else {\n      setFormData({\n        name: '',\n        content: '',\n        type: 'text',\n        position: {\n          x: '',\n          y: ''\n        },\n        size: {\n          width: '',\n          height: ''\n        }\n      });\n    }\n  }, [selectedOverlay]);\n  const moveOverlayLive = direction => {\n    if (!selectedOverlay) return;\n    const step = 5; // pixels per click\n    // Update selected overlay position immediately\n    setSelectedOverlay(prev => {\n      if (!prev) return prev;\n      let newX = parseInt(prev.position.x) || 0;\n      let newY = parseInt(prev.position.y) || 0;\n      switch (direction) {\n        case 'up':\n          newY -= step;\n          break;\n        case 'down':\n          newY += step;\n          break;\n        case 'left':\n          newX -= step;\n          break;\n        case 'right':\n          newX += step;\n          break;\n      }\n      return {\n        ...prev,\n        position: {\n          x: newX,\n          y: newY\n        }\n      };\n    });\n\n    // Also update the formData so inputs stay in sync\n    setFormData(prev => ({\n      ...prev,\n      position: {\n        x: parseInt(prev.position.x || 0) + (direction === 'left' ? -step : direction === 'right' ? step : 0),\n        y: parseInt(prev.position.y || 0) + (direction === 'up' ? -step : direction === 'down' ? step : 0)\n      }\n    }));\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (['x', 'y'].includes(name)) {\n      setFormData(prev => ({\n        ...prev,\n        position: {\n          ...prev.position,\n          [name]: value\n        }\n      }));\n    } else if (['width', 'height'].includes(name)) {\n      setFormData(prev => ({\n        ...prev,\n        size: {\n          ...prev.size,\n          [name]: value\n        }\n      }));\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const payload = {\n        ...formData,\n        position: {\n          x: parseInt(formData.position.x),\n          y: parseInt(formData.position.y)\n        },\n        size: {\n          width: parseInt(formData.size.width),\n          height: parseInt(formData.size.height)\n        },\n        color: formData.color // save the selected color\n      };\n      if (selectedOverlay && selectedOverlay._id) {\n        delete payload._id;\n        await axios.put(`${API_BASE_URL}/overlays/${selectedOverlay._id}`, payload);\n        alert('Overlay updated successfully!');\n      } else {\n        await axios.post(`${API_BASE_URL}/overlays`, payload);\n        alert('Overlay created successfully!');\n      }\n      fetchOverlays();\n      setSelectedOverlay(null);\n    } catch (error) {\n      var _error$response;\n      console.error('Error saving overlay:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error);\n      alert('Failed to save overlay. Check console.');\n    }\n  };\n  const handleDelete = async () => {\n    if (!selectedOverlay || !window.confirm(`Are you sure you want to delete ${selectedOverlay.name}?`)) return;\n    try {\n      await axios.delete(`${API_BASE_URL}/overlays/${selectedOverlay._id}`);\n      alert('Overlay deleted successfully!');\n      fetchOverlays();\n      setSelectedOverlay(null);\n    } catch (error) {\n      console.error('Error deleting overlay:', error);\n      alert('Failed to delete overlay. Check console.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay-manager-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: selectedOverlay ? `Edit ${selectedOverlay.name}` : 'Create New Overlay'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange,\n        placeholder: \"Overlay Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"content\",\n        value: formData.content,\n        onChange: handleChange,\n        placeholder: formData.type === 'logo' ? \"Logo URL or Base64\" : \"Text Content\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"type\",\n        value: formData.type,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"text\",\n          children: \"Text Overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"logo\",\n          children: \"Logo/Image Overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"x\",\n        type: \"number\",\n        value: formData.position.x,\n        onChange: handleChange,\n        placeholder: \"X Position\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"y\",\n        type: \"number\",\n        value: formData.position.y,\n        onChange: handleChange,\n        placeholder: \"Y Position\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"width\",\n        type: \"number\",\n        value: formData.size.width,\n        onChange: handleChange,\n        placeholder: \"Width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"height\",\n        type: \"number\",\n        value: formData.size.height,\n        onChange: handleChange,\n        placeholder: \"Height\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this), formData.type === 'text' && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        name: \"color\",\n        value: formData.color,\n        onChange: handleChange,\n        title: \"Choose text color\",\n        style: {\n          marginTop: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: selectedOverlay ? 'Update Overlay' : 'Create Overlay'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this), selectedOverlay && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleDelete,\n          className: \"delete-btn\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setSelectedOverlay(null),\n          children: \"Clear/New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Saved Overlays\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay-list\",\n      children: overlays.map(o => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedOverlay(o),\n        className: (selectedOverlay === null || selectedOverlay === void 0 ? void 0 : selectedOverlay._id) === o._id ? 'selected' : '',\n        children: [o.name, \" (\", o.type, \")\"]\n      }, o._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 9\n  }, this);\n};\n_s3(OverlayManager, \"6YA5EhyU9iwm5IPeOqNdtLrw+vs=\");\n_c2 = OverlayManager;\nfunction App() {\n  _s4();\n  const videoRef = useRef(null);\n  const [inputRtspUrl, setInputRtspUrl] = useState('');\n  const debouncedRtspUrl = useDebouncedValue(inputRtspUrl); // ✅ Fix 9\n  const [hlsUrl, setHlsUrl] = useState(null);\n  const [streamId, setStreamId] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [overlays, setOverlays] = useState([]);\n  const [selectedOverlay, setSelectedOverlay] = useState(null);\n  const fetchOverlays = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/overlays`);\n      setOverlays(response.data);\n    } catch (error) {\n      console.error('Error fetching overlays:', error);\n    }\n  };\n  useEffect(() => {\n    fetchOverlays();\n  }, []);\n  const handleStartStream = async () => {\n    if (streamId) handleStopStream();\n    setLoading(true);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/stream/start`, {\n        rtspUrl: debouncedRtspUrl\n      });\n      setHlsUrl(response.data.hlsUrl);\n      setStreamId(response.data.streamId);\n    } catch (error) {\n      var _error$response2;\n      console.error('Error starting stream:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error);\n      alert('Failed to start stream. Check console and Flask server logs.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleStopStream = async () => {\n    if (!streamId) return;\n    try {\n      await axios.post(`${API_BASE_URL}/stream/stop/${streamId}`);\n    } catch (error) {\n      console.warn('Could not confirm stream stop on server:', error);\n    } finally {\n      setHlsUrl(null);\n      setStreamId(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"RTSP Livestream with Custom Overlays\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Tech Stack: Python (Flask), MongoDB, React, FFmpeg (RTSP-to-HLS)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stream-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Live View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stream-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter RTSP URL\",\n            value: inputRtspUrl,\n            onChange: e => setInputRtspUrl(e.target.value),\n            disabled: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: hlsUrl ? handleStopStream : handleStartStream,\n            disabled: loading || !debouncedRtspUrl,\n            children: loading ? 'Processing...' : hlsUrl ? 'Stop Stream' : 'Start Stream'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(VideoPlayer, {\n          hlsUrl: hlsUrl,\n          overlays: overlays,\n          videoRef: videoRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 21\n        }, this), !hlsUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"placeholder-text\",\n          children: \"Enter an RTSP URL and click Start to begin the livestream.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Overlay Options (CRUD)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(OverlayManager, {\n          overlays: overlays,\n          setOverlays: setOverlays,\n          selectedOverlay: selectedOverlay,\n          setSelectedOverlay: setSelectedOverlay,\n          fetchOverlays: fetchOverlays\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 375,\n    columnNumber: 9\n  }, this);\n}\n_s4(App, \"B+vQncVVzxAcOAGVxF4ZFE5A2sY=\", false, function () {\n  return [useDebouncedValue];\n});\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"VideoPlayer\");\n$RefreshReg$(_c2, \"OverlayManager\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Hls","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","useDebouncedValue","value","delay","_s","debounced","setDebounced","handler","setTimeout","clearTimeout","VideoPlayer","hlsUrl","overlays","videoRef","_s2","current","video","hls","isSupported","loadSource","attachMedia","on","Events","MANIFEST_PARSED","play","catch","e","console","log","canPlayType","src","addEventListener","destroy","className","style","position","children","ref","controls","autoPlay","muted","playsInline","crossOrigin","width","height","fileName","_jsxFileName","lineNumber","columnNumber","map","overlay","index","type","content","startsWith","alt","name","top","y","left","x","size","pointerEvents","onError","target","display","_id","alignItems","justifyContent","color","fontSize","fontWeight","textAlign","whiteSpace","_c","OverlayManager","setOverlays","selectedOverlay","setSelectedOverlay","fetchOverlays","_s3","formData","setFormData","_selectedOverlay$posi","_selectedOverlay$posi2","_selectedOverlay$posi3","_selectedOverlay$posi4","_selectedOverlay$size","_selectedOverlay$size2","_selectedOverlay$size3","_selectedOverlay$size4","moveOverlayLive","direction","step","prev","newX","parseInt","newY","handleChange","includes","handleSubmit","preventDefault","payload","put","alert","post","error","_error$response","response","data","handleDelete","window","confirm","delete","onSubmit","onChange","placeholder","required","title","marginTop","onClick","o","_c2","App","_s4","inputRtspUrl","setInputRtspUrl","debouncedRtspUrl","setHlsUrl","streamId","setStreamId","loading","setLoading","get","handleStartStream","handleStopStream","rtspUrl","_error$response2","warn","disabled","_c3","$RefreshReg$"],"sources":["C:/Users/athee/OneDrive/Desktop/RSTP/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Hls from 'hls.js';\nimport './App.css';\n\n// ✅ Fix 8: Use environment variable for API base URL\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api';\n\n// ✅ Fix 9: Debounce hook for RTSP input\nfunction useDebouncedValue(value, delay = 500) {\n    const [debounced, setDebounced] = useState(value);\n    useEffect(() => {\n        const handler = setTimeout(() => setDebounced(value), delay);\n        return () => clearTimeout(handler);\n    }, [value, delay]);\n    return debounced;\n}\n\nconst VideoPlayer = ({ hlsUrl, overlays, videoRef }) => {\n    useEffect(() => {\n        if (!hlsUrl || !videoRef.current) return;\n        const video = videoRef.current;\n        let hls;\n\n        if (Hls.isSupported()) {\n            hls = new Hls();\n            hls.loadSource(hlsUrl);\n            hls.attachMedia(video);\n            hls.on(Hls.Events.MANIFEST_PARSED, () => {\n                if (video && typeof video.play === 'function') {\n                    video.play().catch(e => console.log(\"Autoplay blocked:\", e));\n                }\n            });\n        } else if (video.canPlayType('application/vnd.apple.mpegurl')) {\n            video.src = hlsUrl;\n            video.addEventListener('loadedmetadata', () => {\n                if (video && typeof video.play === 'function') {\n                    video.play().catch(e => console.log(\"Autoplay blocked:\", e));\n                }\n            });\n        }\n\n        return () => {\n            if (hls) hls.destroy();\n            else video.src = '';\n        };\n    }, [hlsUrl, videoRef]);\n\n    return (\n        <div className=\"video-container\" style={{ position: 'relative' }}>\n            <video\n                ref={videoRef}\n                controls\n                autoPlay\n                muted\n                playsInline\n                crossOrigin=\"anonymous\"\n                style={{ width: '100%', height: '100%' }}\n            />\n\n            {hlsUrl && overlays.map((overlay, index) => {\n                if (overlay.type === 'logo') {\n                    return (\n                        <img\n                            key={overlay._id || index}\n                            src={\n                                overlay.content.startsWith('http') || overlay.content.startsWith('data:')\n                                    ? overlay.content\n                                    : `data:image/png;base64,${overlay.content}`\n                            }\n                            alt={overlay.name}\n                            style={{\n                                position: 'absolute',\n                                top: `${overlay.position.y}px`,\n                                left: `${overlay.position.x}px`,\n                                width: `${overlay.size.width}px`,\n                                height: `${overlay.size.height}px`,\n                                pointerEvents: 'none',\n                            }}\n                            onError={(e) => (e.target.style.display = 'none')}\n                        />\n                    );\n                } else {\n                    return (\n                        <div\n                            key={overlay._id || index}\n                            style={{\n                                position: 'absolute',\n                                top: `${overlay.position.y}px`,\n                                left: `${overlay.position.x}px`,\n                                display: 'inline-flex',\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                                color: overlay.color || 'white', // ✅ dynamic color\n                                fontSize: '16px',\n                                fontWeight: 'bold',\n                                textAlign: 'center',\n                                pointerEvents: 'none',\n                                whiteSpace: 'nowrap',\n                            }}\n                        >\n                            {overlay.content}\n                        </div>\n                    );\n                }\n            })}\n        </div>\n    );\n};\n\n\n\nconst OverlayManager = ({ overlays, setOverlays, selectedOverlay, setSelectedOverlay, fetchOverlays }) => {\n    const [formData, setFormData] = useState({\n    name: '',\n    content: '',\n    type: 'text',\n    color: '#ffffff', // default white\n    position: { x: '', y: '' },\n    size: { width: '', height: '' }\n});\n\n\n    useEffect(() => {\n        if (selectedOverlay) {\n            setFormData({\n                name: selectedOverlay.name || '',\n                content: selectedOverlay.content || '',\n                type: selectedOverlay.type || 'text',\n                position: {\n                    x: selectedOverlay.position?.x ?? '',\n                    y: selectedOverlay.position?.y ?? ''\n                },\n                size: {\n                    width: selectedOverlay.size?.width ?? '',\n                    height: selectedOverlay.size?.height ?? ''\n                }\n            });\n        } else {\n            setFormData({\n                name: '',\n                content: '',\n                type: 'text',\n                position: { x: '', y: '' },\n                size: { width: '', height: '' }\n            });\n        }\n    }, [selectedOverlay]);\n    const moveOverlayLive = (direction) => {\n    if (!selectedOverlay) return;\n\n    const step = 5; // pixels per click\n    // Update selected overlay position immediately\n    setSelectedOverlay(prev => {\n        if (!prev) return prev;\n\n        let newX = parseInt(prev.position.x) || 0;\n        let newY = parseInt(prev.position.y) || 0;\n\n        switch(direction) {\n            case 'up': newY -= step; break;\n            case 'down': newY += step; break;\n            case 'left': newX -= step; break;\n            case 'right': newX += step; break;\n        }\n\n        return {\n            ...prev,\n            position: { x: newX, y: newY }\n        };\n    });\n\n    // Also update the formData so inputs stay in sync\n    setFormData(prev => ({\n        ...prev,\n        position: {\n            x: parseInt(prev.position.x || 0) + (direction === 'left' ? -step : direction === 'right' ? step : 0),\n            y: parseInt(prev.position.y || 0) + (direction === 'up' ? -step : direction === 'down' ? step : 0)\n        }\n    }));\n};\n\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        if (['x', 'y'].includes(name)) {\n            setFormData(prev => ({ ...prev, position: { ...prev.position, [name]: value } }));\n        } else if (['width', 'height'].includes(name)) {\n            setFormData(prev => ({ ...prev, size: { ...prev.size, [name]: value } }));\n        } else {\n            setFormData(prev => ({ ...prev, [name]: value }));\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const payload = {\n            ...formData,\n            position: { x: parseInt(formData.position.x), y: parseInt(formData.position.y) },\n            size: { width: parseInt(formData.size.width), height: parseInt(formData.size.height) },\n            color: formData.color // save the selected color\n        };\n\n            if (selectedOverlay && selectedOverlay._id) {\n                delete payload._id;\n                await axios.put(`${API_BASE_URL}/overlays/${selectedOverlay._id}`, payload);\n                alert('Overlay updated successfully!');\n            } else {\n                await axios.post(`${API_BASE_URL}/overlays`, payload);\n                alert('Overlay created successfully!');\n            }\n            fetchOverlays();\n            setSelectedOverlay(null);\n        } catch (error) {\n            console.error('Error saving overlay:', error.response?.data || error);\n            alert('Failed to save overlay. Check console.');\n        }\n    };\n\n    const handleDelete = async () => {\n        if (!selectedOverlay || !window.confirm(`Are you sure you want to delete ${selectedOverlay.name}?`)) return;\n        try {\n            await axios.delete(`${API_BASE_URL}/overlays/${selectedOverlay._id}`);\n            alert('Overlay deleted successfully!');\n            fetchOverlays();\n            setSelectedOverlay(null);\n        } catch (error) {\n            console.error('Error deleting overlay:', error);\n            alert('Failed to delete overlay. Check console.');\n        }\n    };\n\n    return (\n        <div className=\"overlay-manager-panel\">\n            <h3>{selectedOverlay ? `Edit ${selectedOverlay.name}` : 'Create New Overlay'}</h3>\n            <form onSubmit={handleSubmit}>\n                <input\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleChange}\n                    placeholder=\"Overlay Name\"\n                    required\n                />\n                <input\n                    name=\"content\"\n                    value={formData.content}\n                    onChange={handleChange}\n                    placeholder={formData.type === 'logo' ? \"Logo URL or Base64\" : \"Text Content\"}\n                    required\n                />\n                <select name=\"type\" value={formData.type} onChange={handleChange}>\n                    <option value=\"text\">Text Overlay</option>\n                    <option value=\"logo\">Logo/Image Overlay</option>\n                </select>\n\n                <input\n                    name=\"x\"\n                    type=\"number\"\n                    value={formData.position.x}\n                    onChange={handleChange}\n                    placeholder=\"X Position\"\n                />\n                <input\n                    name=\"y\"\n                    type=\"number\"\n                    value={formData.position.y}\n                    onChange={handleChange}\n                    placeholder=\"Y Position\"\n                />\n                <input\n                    name=\"width\"\n                    type=\"number\"\n                    value={formData.size.width}\n                    onChange={handleChange}\n                    placeholder=\"Width\"\n                />\n                <input\n                    name=\"height\"\n                    type=\"number\"\n                    value={formData.size.height}\n                    onChange={handleChange}\n                    placeholder=\"Height\"\n                />\n                {formData.type === 'text' && (\n    <input\n        type=\"color\"\n        name=\"color\"\n        value={formData.color}\n        onChange={handleChange}\n        title=\"Choose text color\"\n        style={{ marginTop: '5px' }}\n    />\n)}\n\n                <button type=\"submit\">{selectedOverlay ? 'Update Overlay' : 'Create Overlay'}</button>\n                {selectedOverlay && (\n                    <>\n                        <button type=\"button\" onClick={handleDelete} className=\"delete-btn\">Delete</button>\n                        <button type=\"button\" onClick={() => setSelectedOverlay(null)}>Clear/New</button>\n                    </>\n                )}\n            </form>\n            \n\n\n            <h4>Saved Overlays</h4>\n            <div className=\"overlay-list\">\n                {overlays.map(o => (\n                    <button\n                        key={o._id}\n                        onClick={() => setSelectedOverlay(o)}\n                        className={selectedOverlay?._id === o._id ? 'selected' : ''}\n                    >\n                        {o.name} ({o.type})\n                    </button>\n                ))}\n            </div>\n        </div>\n    );\n};\n\n\nfunction App() {\n    const videoRef = useRef(null);\n    const [inputRtspUrl, setInputRtspUrl] = useState('');\n    const debouncedRtspUrl = useDebouncedValue(inputRtspUrl); // ✅ Fix 9\n    const [hlsUrl, setHlsUrl] = useState(null);\n    const [streamId, setStreamId] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [overlays, setOverlays] = useState([]);\n    const [selectedOverlay, setSelectedOverlay] = useState(null);\n\n    const fetchOverlays = async () => {\n        try {\n            const response = await axios.get(`${API_BASE_URL}/overlays`);\n            setOverlays(response.data);\n        } catch (error) {\n            console.error('Error fetching overlays:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchOverlays();\n    }, []);\n\n    const handleStartStream = async () => {\n        if (streamId) handleStopStream();\n        setLoading(true);\n        try {\n            const response = await axios.post(`${API_BASE_URL}/stream/start`, { rtspUrl: debouncedRtspUrl });\n            setHlsUrl(response.data.hlsUrl);\n            setStreamId(response.data.streamId);\n        } catch (error) {\n            console.error('Error starting stream:', error.response?.data || error);\n            alert('Failed to start stream. Check console and Flask server logs.');\n        } finally {\n            setLoading(false);\n                    }\n    };\n\n    const handleStopStream = async () => {\n        if (!streamId) return;\n        try {\n            await axios.post(`${API_BASE_URL}/stream/stop/${streamId}`);\n        } catch (error) {\n            console.warn('Could not confirm stream stop on server:', error);\n        } finally {\n            setHlsUrl(null);\n            setStreamId(null);\n        }\n    };\n\n    return (\n        <div className=\"app-container\">\n            <header>\n                <h1>RTSP Livestream with Custom Overlays</h1>\n                <p>Tech Stack: Python (Flask), MongoDB, React, FFmpeg (RTSP-to-HLS)</p>\n            </header>\n            <div className=\"content-layout\">\n                <div className=\"stream-section\">\n                    <h2>Live View</h2>\n                    <div className=\"stream-controls\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter RTSP URL\"\n                            value={inputRtspUrl}\n                            onChange={(e) => setInputRtspUrl(e.target.value)}\n                            disabled={loading}\n                        />\n                        <button onClick={hlsUrl ? handleStopStream : handleStartStream} disabled={loading || !debouncedRtspUrl}>\n                            {loading ? 'Processing...' : hlsUrl ? 'Stop Stream' : 'Start Stream'}\n                        </button>\n                    </div>\n                    <VideoPlayer hlsUrl={hlsUrl} overlays={overlays} videoRef={videoRef} />\n                    {!hlsUrl && <p className=\"placeholder-text\">Enter an RTSP URL and click Start to begin the livestream.</p>}\n                </div>\n                <div className=\"overlay-section\">\n                    <h2>Overlay Options (CRUD)</h2>\n                    <OverlayManager \n                        overlays={overlays} \n                        setOverlays={setOverlays}\n                        selectedOverlay={selectedOverlay}\n                        setSelectedOverlay={setSelectedOverlay}\n                        fetchOverlays={fetchOverlays}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}