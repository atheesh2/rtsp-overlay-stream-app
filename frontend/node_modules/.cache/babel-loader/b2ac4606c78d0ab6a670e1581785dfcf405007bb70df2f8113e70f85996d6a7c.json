{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\athee\\\\OneDrive\\\\Desktop\\\\RSTP\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Hls from 'hls.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000/api';\n\n// --- Reusable Component: Video Player with Overlays ---\nconst VideoPlayer = ({\n  hlsUrl,\n  overlays,\n  videoRef\n}) => {\n  _s();\n  useEffect(() => {\n    if (!hlsUrl || !videoRef.current) return;\n    const video = videoRef.current;\n    let hls;\n    if (Hls.isSupported()) {\n      hls = new Hls();\n      hls.loadSource(hlsUrl);\n      hls.attachMedia(video);\n      hls.on(Hls.Events.MANIFEST_PARSED, function () {\n        video.play().catch(e => console.log(\"Autoplay blocked:\", e));\n      });\n    } else if (video.canPlayType('application/vnd.apple.mpegurl')) {\n      video.src = hlsUrl;\n      video.addEventListener('loadedmetadata', () => video.play().catch(e => console.log(\"Autoplay blocked:\", e)));\n    }\n    return () => {\n      if (hls) hls.destroy();\n    };\n  }, [hlsUrl, videoRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      controls: true,\n      autoPlay: true,\n      muted: true,\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), hlsUrl && overlays.map(overlay => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `overlay-item ${overlay.type}`,\n      style: {\n        top: `${overlay.position.y}px`,\n        left: `${overlay.position.x}px`,\n        width: `${overlay.size.width}px`,\n        height: `${overlay.size.height}px`\n      },\n      children: overlay.type === 'logo' ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: overlay.content,\n        alt: overlay.name,\n        style: {\n          width: '100%',\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: `${overlay.size.height * 0.5}px`\n        },\n        children: overlay.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this)\n    }, overlay._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n// --- Reusable Component: Overlay Management Panel ---\n_s(VideoPlayer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = VideoPlayer;\nconst OverlayManager = ({\n  overlays,\n  setOverlays,\n  selectedOverlay,\n  setSelectedOverlay,\n  fetchOverlays\n}) => {\n  _s2();\n  var _formData$position, _formData$position2, _formData$size, _formData$size2;\n  const [formData, setFormData] = useState({});\n  useEffect(() => {\n    if (selectedOverlay) {\n      setFormData(selectedOverlay);\n    } else {\n      setFormData({\n        name: '',\n        content: '',\n        type: 'text',\n        position: {\n          x: 10,\n          y: 10\n        },\n        size: {\n          width: 100,\n          height: 50\n        }\n      });\n    }\n  }, [selectedOverlay]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (['x', 'y'].includes(name)) {\n      setFormData(prev => ({\n        ...prev,\n        position: {\n          ...prev.position,\n          [name]: parseInt(value) || 0\n        }\n      }));\n    } else if (['width', 'height'].includes(name)) {\n      setFormData(prev => ({\n        ...prev,\n        size: {\n          ...prev.size,\n          [name]: parseInt(value) || 0\n        }\n      }));\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const payload = {\n        ...formData\n      };\n      if (selectedOverlay && selectedOverlay._id) {\n        delete payload._id;\n        await axios.put(`${API_BASE_URL}/overlays/${selectedOverlay._id}`, payload);\n      } else {\n        await axios.post(`${API_BASE_URL}/overlays`, payload);\n      }\n      fetchOverlays();\n      setSelectedOverlay(null);\n    } catch (error) {\n      var _error$response;\n      console.error('Error saving overlay:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error);\n      alert('Failed to save overlay. Check console.');\n    }\n  };\n  const handleDelete = async () => {\n    if (!selectedOverlay || !window.confirm(`Are you sure you want to delete ${selectedOverlay.name}?`)) return;\n    try {\n      await axios.delete(`${API_BASE_URL}/overlays/${selectedOverlay._id}`);\n      fetchOverlays();\n      setSelectedOverlay(null);\n    } catch (error) {\n      console.error('Error deleting overlay:', error);\n      alert('Failed to delete overlay. Check console.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay-manager-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: selectedOverlay ? `Edit ${selectedOverlay.name}` : 'Create New Overlay'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        value: formData.name || '',\n        onChange: handleChange,\n        placeholder: \"Overlay Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"content\",\n        value: formData.content || '',\n        onChange: handleChange,\n        placeholder: formData.type === 'logo' ? \"Logo URL\" : \"Text Content\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"type\",\n        value: formData.type || 'text',\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"text\",\n          children: \"Text Overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"logo\",\n          children: \"Logo/Image Overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"x\",\n        type: \"number\",\n        value: ((_formData$position = formData.position) === null || _formData$position === void 0 ? void 0 : _formData$position.x) || 0,\n        onChange: handleChange,\n        placeholder: \"Pos X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"y\",\n        type: \"number\",\n        value: ((_formData$position2 = formData.position) === null || _formData$position2 === void 0 ? void 0 : _formData$position2.y) || 0,\n        onChange: handleChange,\n        placeholder: \"Pos Y\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"width\",\n        type: \"number\",\n        value: ((_formData$size = formData.size) === null || _formData$size === void 0 ? void 0 : _formData$size.width) || 0,\n        onChange: handleChange,\n        placeholder: \"Width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"height\",\n        type: \"number\",\n        value: ((_formData$size2 = formData.size) === null || _formData$size2 === void 0 ? void 0 : _formData$size2.height) || 0,\n        onChange: handleChange,\n        placeholder: \"Height\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: selectedOverlay ? 'Update Overlay' : 'Create Overlay'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), selectedOverlay && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleDelete,\n          className: \"delete-btn\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setSelectedOverlay(null),\n          children: \"Clear/New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Saved Overlays\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay-list\",\n      children: overlays.map(o => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedOverlay(o),\n        className: (selectedOverlay === null || selectedOverlay === void 0 ? void 0 : selectedOverlay._id) === o._id ? 'selected' : '',\n        children: [o.name, \" (\", o.type, \")\"]\n      }, o._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n\n// --- Main Application Component ---\n_s2(OverlayManager, \"XnOI2K2W9M298y6FLPYECuyF8QY=\");\n_c2 = OverlayManager;\nfunction App() {\n  _s3();\n  const videoRef = useRef(null);\n  const [inputRtspUrl, setInputRtspUrl] = useState('');\n  const [hlsUrl, setHlsUrl] = useState(null);\n  const [streamId, setStreamId] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [overlays, setOverlays] = useState([]);\n  const [selectedOverlay, setSelectedOverlay] = useState(null);\n  const fetchOverlays = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/overlays`);\n      setOverlays(response.data);\n    } catch (error) {\n      console.error('Error fetching overlays:', error);\n    }\n  };\n  useEffect(() => {\n    fetchOverlays();\n  }, []);\n  const handleStartStream = async () => {\n    if (streamId) handleStopStream();\n    setLoading(true);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/stream/start`, {\n        rtspUrl: inputRtspUrl\n      });\n      setHlsUrl(response.data.hlsUrl);\n      setStreamId(response.data.streamId);\n    } catch (error) {\n      var _error$response2;\n      console.error('Error starting stream:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error);\n      alert('Failed to start stream. Check console and Flask server logs.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleStopStream = async () => {\n    if (!streamId) return;\n    try {\n      await axios.post(`${API_BASE_URL}/stream/stop/${streamId}`);\n    } catch (error) {\n      console.warn('Could not confirm stream stop on server:', error);\n    } finally {\n      setHlsUrl(null);\n      setStreamId(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"RTSP Livestream with Custom Overlays\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Tech Stack: Python (Flask), MongoDB, React, FFmpeg (RTSP-to-HLS)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stream-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Live View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stream-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter RTSP URL (e.g., rtsp://wowzaec2demo.streamlock.net/vod/mp4:BigBuckBunny_115k.mp4)\",\n            value: inputRtspUrl,\n            onChange: e => setInputRtspUrl(e.target.value),\n            disabled: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: hlsUrl ? handleStopStream : handleStartStream,\n            disabled: loading || !inputRtspUrl,\n            children: loading ? 'Processing...' : hlsUrl ? 'Stop Stream' : 'Start Stream'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(VideoPlayer, {\n          hlsUrl: hlsUrl,\n          overlays: overlays,\n          videoRef: videoRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), !hlsUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"placeholder-text\",\n          children: \"Enter an RTSP URL and click Start to begin the livestream.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Overlay Options (CRUD)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(OverlayManager, {\n          overlays: overlays,\n          setOverlays: setOverlays,\n          selectedOverlay: selectedOverlay,\n          setSelectedOverlay: setSelectedOverlay,\n          fetchOverlays: fetchOverlays\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 9\n  }, this);\n}\n_s3(App, \"OFmmFpYnqUleUsjrvJHpLBCPTJM=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"VideoPlayer\");\n$RefreshReg$(_c2, \"OverlayManager\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Hls","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","VideoPlayer","hlsUrl","overlays","videoRef","_s","current","video","hls","isSupported","loadSource","attachMedia","on","Events","MANIFEST_PARSED","play","catch","e","console","log","canPlayType","src","addEventListener","destroy","className","children","ref","controls","autoPlay","muted","playsInline","fileName","_jsxFileName","lineNumber","columnNumber","map","overlay","type","style","top","position","y","left","x","width","size","height","content","alt","name","fontSize","_id","_c","OverlayManager","setOverlays","selectedOverlay","setSelectedOverlay","fetchOverlays","_s2","_formData$position","_formData$position2","_formData$size","_formData$size2","formData","setFormData","handleChange","value","target","includes","prev","parseInt","handleSubmit","preventDefault","payload","put","post","error","_error$response","response","data","alert","handleDelete","window","confirm","delete","onSubmit","onChange","placeholder","required","onClick","o","_c2","App","_s3","inputRtspUrl","setInputRtspUrl","setHlsUrl","streamId","setStreamId","loading","setLoading","get","handleStartStream","handleStopStream","rtspUrl","_error$response2","warn","disabled","_c3","$RefreshReg$"],"sources":["C:/Users/athee/OneDrive/Desktop/RSTP/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Hls from 'hls.js';\nimport './App.css'; \n\nconst API_BASE_URL = 'http://localhost:5000/api';\n\n// --- Reusable Component: Video Player with Overlays ---\nconst VideoPlayer = ({ hlsUrl, overlays, videoRef }) => {\n    \n    useEffect(() => {\n        if (!hlsUrl || !videoRef.current) return;\n        const video = videoRef.current;\n        let hls;\n\n        if (Hls.isSupported()) {\n            hls = new Hls();\n            hls.loadSource(hlsUrl);\n            hls.attachMedia(video);\n            hls.on(Hls.Events.MANIFEST_PARSED, function() {\n                video.play().catch(e => console.log(\"Autoplay blocked:\", e));\n            });\n        } else if (video.canPlayType('application/vnd.apple.mpegurl')) {\n            video.src = hlsUrl;\n            video.addEventListener('loadedmetadata', () => video.play().catch(e => console.log(\"Autoplay blocked:\", e)));\n        }\n\n        return () => {\n            if (hls) hls.destroy();\n        };\n    }, [hlsUrl, videoRef]);\n\n    return (\n        <div className=\"video-container\">\n            <video ref={videoRef} controls autoPlay muted playsInline />\n            \n            {hlsUrl && overlays.map(overlay => (\n                <div\n                    key={overlay._id}\n                    className={`overlay-item ${overlay.type}`}\n                    style={{\n                        top: `${overlay.position.y}px`,\n                        left: `${overlay.position.x}px`,\n                        width: `${overlay.size.width}px`,\n                        height: `${overlay.size.height}px`,\n                    }}\n                >\n                    {overlay.type === 'logo' ? (\n                        <img src={overlay.content} alt={overlay.name} style={{ width: '100%', height: '100%' }} />\n                    ) : (\n                        <span style={{ fontSize: `${overlay.size.height * 0.5}px` }}>{overlay.content}</span>\n                    )}\n                </div>\n            ))}\n        </div>\n    );\n};\n\n\n// --- Reusable Component: Overlay Management Panel ---\nconst OverlayManager = ({ overlays, setOverlays, selectedOverlay, setSelectedOverlay, fetchOverlays }) => {\n    const [formData, setFormData] = useState({});\n\n    useEffect(() => {\n        if (selectedOverlay) {\n            setFormData(selectedOverlay);\n        } else {\n            setFormData({ name: '', content: '', type: 'text', position: { x: 10, y: 10 }, size: { width: 100, height: 50 } });\n        }\n    }, [selectedOverlay]);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        if (['x', 'y'].includes(name)) {\n            setFormData(prev => ({ ...prev, position: { ...prev.position, [name]: parseInt(value) || 0 } }));\n        } else if (['width', 'height'].includes(name)) {\n             setFormData(prev => ({ ...prev, size: { ...prev.size, [name]: parseInt(value) || 0 } }));\n        } else {\n            setFormData(prev => ({ ...prev, [name]: value }));\n        }\n    };\n    \n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const payload = { ...formData };\n            if (selectedOverlay && selectedOverlay._id) {\n                delete payload._id; \n                await axios.put(`${API_BASE_URL}/overlays/${selectedOverlay._id}`, payload);\n            } else {\n                await axios.post(`${API_BASE_URL}/overlays`, payload);\n            }\n            fetchOverlays();\n            setSelectedOverlay(null);\n        } catch (error) {\n            console.error('Error saving overlay:', error.response?.data || error);\n            alert('Failed to save overlay. Check console.');\n        }\n    };\n\n    const handleDelete = async () => {\n        if (!selectedOverlay || !window.confirm(`Are you sure you want to delete ${selectedOverlay.name}?`)) return;\n        try {\n            await axios.delete(`${API_BASE_URL}/overlays/${selectedOverlay._id}`);\n            fetchOverlays();\n            setSelectedOverlay(null);\n        } catch (error) {\n            console.error('Error deleting overlay:', error);\n            alert('Failed to delete overlay. Check console.');\n        }\n    };\n\n    return (\n        <div className=\"overlay-manager-panel\">\n            <h3>{selectedOverlay ? `Edit ${selectedOverlay.name}` : 'Create New Overlay'}</h3>\n            \n            <form onSubmit={handleSubmit}>\n                <input name=\"name\" value={formData.name || ''} onChange={handleChange} placeholder=\"Overlay Name\" required />\n                <input name=\"content\" value={formData.content || ''} onChange={handleChange} placeholder={formData.type === 'logo' ? \"Logo URL\" : \"Text Content\"} required />\n                \n                <select name=\"type\" value={formData.type || 'text'} onChange={handleChange}>\n                    <option value=\"text\">Text Overlay</option>\n                    <option value=\"logo\">Logo/Image Overlay</option>\n                </select>\n\n                <input name=\"x\" type=\"number\" value={formData.position?.x || 0} onChange={handleChange} placeholder=\"Pos X\" />\n                <input name=\"y\" type=\"number\" value={formData.position?.y || 0} onChange={handleChange} placeholder=\"Pos Y\" />\n                <input name=\"width\" type=\"number\" value={formData.size?.width || 0} onChange={handleChange} placeholder=\"Width\" />\n                <input name=\"height\" type=\"number\" value={formData.size?.height || 0} onChange={handleChange} placeholder=\"Height\" />\n\n                <button type=\"submit\">{selectedOverlay ? 'Update Overlay' : 'Create Overlay'}</button>\n                {selectedOverlay && (\n                    <>\n                        <button type=\"button\" onClick={handleDelete} className=\"delete-btn\">Delete</button>\n                        <button type=\"button\" onClick={() => setSelectedOverlay(null)}>Clear/New</button>\n                    </>\n                )}\n            </form>\n            \n            <h4>Saved Overlays</h4>\n            <div className=\"overlay-list\">\n                {overlays.map(o => (\n                    <button key={o._id} onClick={() => setSelectedOverlay(o)} className={selectedOverlay?._id === o._id ? 'selected' : ''}>\n                        {o.name} ({o.type})\n                    </button>\n                ))}\n            </div>\n        </div>\n    );\n};\n\n\n// --- Main Application Component ---\nfunction App() {\n    const videoRef = useRef(null);\n    const [inputRtspUrl, setInputRtspUrl] = useState('');\n    const [hlsUrl, setHlsUrl] = useState(null);\n    const [streamId, setStreamId] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [overlays, setOverlays] = useState([]);\n    const [selectedOverlay, setSelectedOverlay] = useState(null);\n\n    const fetchOverlays = async () => {\n        try {\n            const response = await axios.get(`${API_BASE_URL}/overlays`);\n            setOverlays(response.data);\n        } catch (error) {\n            console.error('Error fetching overlays:', error);\n        }\n    };\n    \n    useEffect(() => {\n        fetchOverlays();\n    }, []);\n\n    const handleStartStream = async () => {\n        if (streamId) handleStopStream();\n\n        setLoading(true);\n        try {\n            const response = await axios.post(`${API_BASE_URL}/stream/start`, { rtspUrl: inputRtspUrl });\n            setHlsUrl(response.data.hlsUrl);\n            setStreamId(response.data.streamId);\n        } catch (error) {\n            console.error('Error starting stream:', error.response?.data || error);\n            alert('Failed to start stream. Check console and Flask server logs.');\n        } finally {\n            setLoading(false);\n        }\n    };\n    \n    const handleStopStream = async () => {\n        if (!streamId) return;\n        try {\n            await axios.post(`${API_BASE_URL}/stream/stop/${streamId}`);\n        } catch (error) {\n            console.warn('Could not confirm stream stop on server:', error);\n        } finally {\n            setHlsUrl(null);\n            setStreamId(null);\n        }\n    };\n\n    return (\n        <div className=\"app-container\">\n            <header>\n                <h1>RTSP Livestream with Custom Overlays</h1>\n                <p>Tech Stack: Python (Flask), MongoDB, React, FFmpeg (RTSP-to-HLS)</p>\n            </header>\n\n            <div className=\"content-layout\">\n                <div className=\"stream-section\">\n                    <h2>Live View</h2>\n                    <div className=\"stream-controls\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter RTSP URL (e.g., rtsp://wowzaec2demo.streamlock.net/vod/mp4:BigBuckBunny_115k.mp4)\"\n                            value={inputRtspUrl}\n                            onChange={(e) => setInputRtspUrl(e.target.value)}\n                            disabled={loading}\n                        />\n                        <button onClick={hlsUrl ? handleStopStream : handleStartStream} disabled={loading || !inputRtspUrl}>\n                            {loading ? 'Processing...' : hlsUrl ? 'Stop Stream' : 'Start Stream'}\n                        </button>\n                    </div>\n\n                    <VideoPlayer hlsUrl={hlsUrl} overlays={overlays} videoRef={videoRef} />\n                    {!hlsUrl && <p className=\"placeholder-text\">Enter an RTSP URL and click Start to begin the livestream.</p>}\n                </div>\n\n                <div className=\"overlay-section\">\n                    <h2>Overlay Options (CRUD)</h2>\n                    <OverlayManager \n                        overlays={overlays} \n                        setOverlays={setOverlays}\n                        selectedOverlay={selectedOverlay}\n                        setSelectedOverlay={setSelectedOverlay}\n                        fetchOverlays={fetchOverlays}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}